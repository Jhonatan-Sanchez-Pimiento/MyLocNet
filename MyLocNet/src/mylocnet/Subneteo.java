/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mylocnet;

import com.sun.glass.events.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author jhona
 */
public class Subneteo extends javax.swing.JFrame {

    String []arreglo;
    String clase;
    int grupo1,grupo2,grupo3,grupo4;
    long bingrupo1,bingrupo2,bingrupo3,bingrupo4;
    
    public Subneteo() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtip = new javax.swing.JTextField();
        btncalcular = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areatxt = new javax.swing.JTextArea();
        txtprivada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtpublica = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Dirección IPv4:");

        txtip.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        txtip.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtip.setText("10.0.0.0");
        txtip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                none(evt);
            }
        });
        txtip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtipActionPerformed(evt);
            }
        });
        txtip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtipKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtipKeyTyped(evt);
            }
        });

        btncalcular.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btncalcular.setText("Calcular");
        btncalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalcularActionPerformed(evt);
            }
        });

        areatxt.setColumns(20);
        areatxt.setRows(5);
        jScrollPane1.setViewportView(areatxt);

        txtprivada.setEditable(false);
        txtprivada.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        txtprivada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtprivada.setToolTipText("");
        txtprivada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtprivadanone(evt);
            }
        });
        txtprivada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprivadaActionPerformed(evt);
            }
        });
        txtprivada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtprivadaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtprivadaKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Tipo de clase Privada:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Máscara de Subred:");

        txtpublica.setEditable(false);
        txtpublica.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        txtpublica.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtpublica.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Tipo de clase Pública:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("# de Hosts/Súbredes:");

        jComboBox1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setPreferredSize(new java.awt.Dimension(71, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(btncalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtip)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtpublica)
                            .addComponent(txtprivada, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtprivada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtpublica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btncalcular)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 266, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalcularActionPerformed
    calcular();
    ValGrupoIp();
    ClaseIpPrivada();
    }//GEN-LAST:event_btncalcularActionPerformed

    private void txtipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtipActionPerformed

    private void txtipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtipKeyTyped
        //variable que almacena la tecla presionada por el usuario
        char validar = evt.getKeyChar();
        //condición que valida si la tecla presionada es una letra
        if(Character.isLetter(validar)){
           //getToolkit proporciona los servicios de impresión de la clase, y permite imprimir un audio (beep)
           getToolkit().beep();
           //se rechaza la tecla y hace que el valor no se tome en la caja de texto
           evt.consume();
        }
    }//GEN-LAST:event_txtipKeyTyped

    private void txtipKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtipKeyReleased
        arreglo = null;
        //se almacena en el arreglo los grupos de la dirección IPv4
        arregloIp();
        //Se invoca el método ClaseIpPrivada 
        ClaseIpPrivada();
        //Condicional que valida si la ultima tecla presionada es Enter
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         calcular();
         //ClaseIpPrivada();
         btncalcular.requestFocus();
        }
        
    }//GEN-LAST:event_txtipKeyReleased

    private void none(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_none
     
    }//GEN-LAST:event_none

    private void txtprivadanone(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtprivadanone
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprivadanone

    private void txtprivadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprivadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprivadaActionPerformed

    private void txtprivadaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprivadaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprivadaKeyReleased

    private void txtprivadaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprivadaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprivadaKeyTyped

    private int cifras(int num){
    int cif = 0;
    
    for(int i = 1; num > 0 ; i++){
     num = num /10;
     cif = i;
   }
   if(cif<=3 && cif>0){
       return cif;
   }else{
       if(cif == 0){
         cif = 1;
         return cif;
       }else{
       return cif;    
       }
   }
    }
    
    private void arregloIp(){
     arreglo = null;
     arreglo = txtip.getText().split("\\.");   
    }
    
    private void calcular(){
     /*El arreglo almacena todos los datos de la dirección IP separandolos
    por el punto*/
    arregloIp();
    //Se valida si el arreglo cumple con las 4 grupos que debe tener la dirección IPv4
    if ( arreglo.length == 4){
        for(int i=0; i<4 ; i++){
            //condición que valida que el arreglo en la posición i, no este vacio
            if(!arreglo[i].isEmpty()){
            //Condición que valida si el valor del arreglo en i, es superior a (-1)
            if(Integer.parseInt(arreglo[i]) > (-1)){
            //Invoca al metodo Cifras y envía de parametro el valor del arreglo en entero
            //Valida si el valor en el arreglo tiene entre 1 y 3 cifras
            if(cifras(Integer.parseInt(arreglo[i])) <= 3 && cifras(Integer.parseInt(arreglo[i])) >= 1){
               
           }else{
               JOptionPane.showMessageDialog(null,"La dirección en el "+(i+1) +" grupo de Bytes, tiene más de 3 cifras.","Error en la dirección IPv4",0);
           }
         }else{
               JOptionPane.showMessageDialog(null,"La dirección en el "+(i+1) +" grupo de Bytes, tiene un valor negativo!.","Error en la dirección IPv4",0); 
            }
          }
        }
    }else {
      //valida si el tamaño es superior a los 4 grupos de la dirección IPv4
      if(arreglo.length > 4){
          JOptionPane.showMessageDialog(null,"La dirección IPv4 tiene más de 5 grupos!","Error en la dirección IPv4",0);
      }else{
          //al no cumplirse ninguna de las condiciones la dirección IPv4 tiene menos de 4 grupos
          JOptionPane.showMessageDialog(null,"La dirección IPv4 tiene menos de 4 grupos!","Error en la dirección IPv4",0);
      }  
    }   
    }
    
    //método que convierte cada grupo en un tipo de dato entero
    private void gruposIP(){
     if(arreglo.length == 4){
         if(!arreglo[0].isEmpty()){
           grupo1 = Integer.parseInt(arreglo[0]);
            if(!arreglo[1].isEmpty()){
            grupo2 = Integer.parseInt(arreglo[1]);  
                if(!arreglo[2].isEmpty()){
                grupo3 = Integer.parseInt(arreglo[2]);
                    if(!arreglo[3].isEmpty()){
                    grupo4 = Integer.parseInt(arreglo[3]);  
                    }else{
                     grupo4 = 0;  
                }}else{
                   grupo3 = 0; 
            }}else{
             grupo2 = 0;
        }}else{
           grupo1 = 0;  
    }
   }   
  }
    
    private void ClaseIpPrivada(){
     gruposIP();
     clase=null;
     
     if(arreglo.length==4){
      //condicional que valida si el grupo 3 y 4 esta entre 0 y 255   
     if (grupo3 >=0 && grupo3 <= 255 && grupo4 >= 0 && grupo4 <= 255){
      //condicionales que valida si cumple con los parametros de cada clase.
     if(grupo1==10 && grupo2>=0 && grupo2 <= 255){
        clase = "A";
     }else{
         if(grupo1==172 && grupo2>=16 && grupo2 <= 31 ){
         clase = "B";
     }else{
         if(grupo1==192 && grupo2==168){
         clase = "C";
         }
        }
       }
     }
     }
     txtprivada.setText(clase);
    }
    
    private void ClaseIpPublica(){
        
    }
    
    private void ConvertirBinDec(){
        Operacion oper = new Operacion();
        
    }
    
    private boolean ValGrupoIp(){
        boolean ret=false;
        String group = null;
        int est=0;
        
        if(arreglo.length == 4){
         if(grupo1>=0 && grupo1<=255){
            if(grupo2>=0 && grupo2<=255){
                if(grupo3>=0 && grupo3<=255){
                    if(grupo4>=0 && grupo4<=255){
                        ret = true;
                        }else{
                        group = "Cuarto";
                        est = 1;
                    }
                    }else{
                        group = "Tercer";
                        est = 1; 
                }}else{
                    group = "Segundo";
                    est = 1; 
            }}else{
                group = "Primer";
                est = 1;
         }
         if(est==1){
         JOptionPane.showMessageDialog(null,"El " + group + " grupo de no cumple con el tamaño entre 0 y 255 bits.", "Error en tamaño de octetos", 0);
         }
         }
        return ret;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Subneteo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Subneteo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Subneteo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Subneteo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Subneteo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areatxt;
    private javax.swing.JButton btncalcular;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtip;
    private javax.swing.JTextField txtprivada;
    private javax.swing.JTextField txtpublica;
    // End of variables declaration//GEN-END:variables

}
