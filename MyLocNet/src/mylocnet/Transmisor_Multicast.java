package mylocnet;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;  

/**
 *
 * @JhonatanSanchez @KatianaTordecilla @NicolasSutachan
 */
public class Transmisor_Multicast extends javax.swing.JFrame {

    public Transmisor_Multicast() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnknownHostException, IOException {
       System.out.println (" Muticast Sender ");
       
       try 
       {
       //Identificación del grupo multicast.
       InetAddress group = InetAddress.getByName ("259.1.2.3");
       
       //Número ed puerto del grupo.
       int port = 7200;
       
       //Creación del soket multicast.
       MulticastSocket socket = new MulticastSocket ( port);
       
       //Unión al grupo.
       socket.joinGroup(group);
       
       String message = JOptionPane.showInputDialog
               (null, "Input a message: ");
       
       byte[] m = message.getBytes();
       
       //Creación del paquete que va a ser utlizado para enviar datos. Observe
       //que en este caso debe identificar el grupo al que desea enviar los
       //datos ya especificar el número dde puerto.
       DatagramPacket packekt = new DatagramPacket (m, m.length, group, port);
       
       //Envío del paquete al grupo multicast.
       socket.send(packekt);
               
       System.out.println ("Sent: " +message);
       //Salida del grupo.
       socket.leaveGroup(group);
       }
       //Puede lanzar una excepción de hoost desconocido.
       catch (UnknownHostException e){
           e.printStackTrace();
       }
       //Puede lancar una excepción entrada y salida.
       catch (IOException e) {
           e.printStackTrace();
       }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transmisor_Multicast().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
